name: CI

on: [pull_request]

jobs:

  build-test:
    runs-on: ubuntu-latest
    env:
      KEYMANHOSTS_TIER: TIER_TEST

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Docker image
      uses: addnab/docker-run-action@v3
      with:
        image: docker:latest
        shell: bash
        run: |
          pwd
          docker run -d -p 8055:80 -v $(pwd):/var/www/html/ -e S_KEYMAN_COM=localhost:8054 keyman-websites

      env:
        fail-fast: true

    #
    # Install website PHP dependencies
    #
    - name:  Install dependencies
      shell: bash
      run: |
        echo $TIER_TEST > tier.txt
        composer install --no-progress
        npm install

    #
    # Finally, run the tests
    #
    - name: Lint
      shell: bash
      run: |
        ( set +e; set +o pipefail; find . -name '*.php' | grep -v '/vendor/' | xargs -n 1 -d '\n' php -l | grep -v "No syntax errors detected"; exit ${PIPESTATUS[2]} )

    - name: Check broken links
      shell: bash
      run: |
        composer check-docker-links
        ( set +e; set +o pipefail; npx broken-link-checker http://localhost:8055 --ordered --recursive --host-requests 50 -e --filter-level 3 | grep -E "BROKEN|Getting links from" | grep -B 1 "BROKEN"; exit ${PIPESTATUS[0]} )

    - name: Check PHP errors
      shell: bash
      run: |
        ( set +e; set +o pipefail; [ -f php_errors.log ] && echo 'PHP reported errors or warnings; see log below' && exit 1 || ( echo 'No PHP errors found' && exit 0 ) )
    #
    # If any of the tests fail, let's grab a bit more detail on the environment
    #
    - name: Report errors
      if: ${{ failure() }}
      shell: bash
      run: |
        echo "--- tier.txt ---"
        cat tier.txt
        echo "--- PHP Errors ---"
        [ -f php_errors.log ] && cat php_errors.log
        echo "--- PHPInfo ---"
        php -r 'phpinfo();'